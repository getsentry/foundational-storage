name: Docker

on:
  push:
    branches:
      - main
      - release/**

  # NB: Do not build on pull requests by default. Uncomment temporarily to test changes.
  # pull_request:

jobs:
  build:
    name: Build ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            platform: amd64
          - os: ubuntu-24.04-arm
            platform: arm64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          cache-from: ghcr.io/getsentry/objectstore:latest
          cache-to: type=inline
          platforms: linux/${{ matrix.platform }}
          tags: ${{ matrix.platform }}
          outputs: type=docker,dest=/tmp/objectstore-${{ matrix.platform }}.tar
          push: false

      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
          name: objectstore-${{ matrix.platform }}
          path: /tmp/objectstore-${{ matrix.platform }}.tar

  assemble-image:
    name: Publish
    runs-on: ubuntu-latest
    needs: [build]

    # Intentionally never publish on pull requests
    if: ${{ github.event_name != 'pull_request' }}

    steps:
      - uses: actions/checkout@v4

      - run: docker login --username '${{ github.actor }}' --password-stdin ghcr.io <<< "$GHCR_TOKEN"
        env:
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download amd64 Image
        uses: actions/download-artifact@v4
        with:
          name: objectstore-amd64
          path: /tmp

      - name: Load amd64 Image
        run: docker load --input /tmp/objectstore-amd64.tar

      - name: Download arm64 Image
        uses: actions/download-artifact@v4
        with:
          name: objectstore-arm64
          path: /tmp

      - name: Load arm64 Image
        run: docker load --input /tmp/objectstore-arm64.tar

      - name: Push to GitHub Container Registry
        run: |
          docker tag amd64 ghcr.io/getsentry/objectstore:${{ github.sha }}-amd64
          docker push ghcr.io/getsentry/objectstore:${{ github.sha }}-amd64

          docker tag arm64 ghcr.io/getsentry/objectstore:${{ github.sha }}-arm64
          docker push ghcr.io/getsentry/objectstore:${{ github.sha }}-arm64

          docker manifest create \
            ghcr.io/getsentry/objectstore:${{ github.sha }} \
            --amend ghcr.io/getsentry/objectstore:${{ github.sha }}-amd64 \
            --amend ghcr.io/getsentry/objectstore:${{ github.sha }}-arm64

          docker manifest push ghcr.io/getsentry/objectstore:${{ github.sha }}

          docker manifest create \
            ghcr.io/getsentry/objectstore:latest \
            --amend ghcr.io/getsentry/objectstore:${{ github.sha }}-amd64 \
            --amend ghcr.io/getsentry/objectstore:${{ github.sha }}-arm64

          docker manifest push ghcr.io/getsentry/objectstore:latest
